#%RAML 0.8
---
title: "[DRAFT] PacMan enpoints"
protocols: [ HTTPS ]
mediaType: application/json
baseUri: https://pacman.io

securitySchemes:
  - token: !include security_schemes/token.raml
traits:
  - withUserAgent: !include traits/with_user_agent.raml
# resourceTypes:

/{service}/{user}/{repo}:         # show stats for public repositories
  /badge:                         # get badge (.svg)

/login:
  /{service}:

/settings:
  /profile:                       # name, emails, connect services, delete account
  /security:                      # (?)
    /sessions:
    /history:
  /tokens:                        # tokens that can be used to access the API (list, create, edit, delete)
  /repositories:                  # list avaliable repositories, UI for manipulation (enable, disable) and notifications

/api/v1:
  displayName: PacMan HTTP API
  description: TBD

  /packages:
    /{language}:
      uriParameters:
        language:
          description: Specifies allowed language.
          enum: [ python, javascript ]
      /{name}:
        uriParameters:
          name:
            description: Package name.
            type: string
            example: Django
        get:
          description: |
            Retrieve package information.
          is: [ withUserAgent ]
          responses:
            200:
              description: |
                Successfully retrieved package information.
              body:
                application/json:
                  schema: TBD
                  example: !include examples/api/v1/packages/language/name/get_ok.json
            404:
              description: |
                Package not found.

  /repositories:
    get:
      description: |
        Retrieve list of user's repositories.
      securedBy: [ token ]
      is: [ withUserAgent ]
      responses:
        200:
          description: |
            Successfully retrieved list of user's repositories.
          body:
            application/json:
              schema: TBD
              example: !include examples/api/v1/repositories/get_ok.json
        404:
          description: |
            Repositories not found.
    put:
      description: |
        Update list of user's repositories.
      securedBy: [ token ]
      is: [ withUserAgent ]
      responses:
        200:
          description: |
            Successfully updated list of user's repositories.
          body:
            application/json:
              schema: TBD
              example: !include examples/api/v1/repositories/put_ok.json
        409:
          description: |
            Can not retrieve list of user's repositories due to errors,
            e.g.: revoked access to service.
          body:
            application/json:
              schema: TBD
              example: !include examples/api/v1/repositories/put_conflict.json
    /{service}:
      uriParameters:
        service:
          description: Specifies allowed service name.
          enum: [ github ]
      get:
        securedBy: [ token ]
        is: [ withUserAgent ]
        description: |
          Retrieve list of user's repositories for specified service.
        responses:
          200:
            description: |
              Successfully retrieved list of user's repositories
              for specified service.
            body:
              application/json:
                schema: TBD
                example: !include examples/api/v1/repositories/service/get_ok.json
          404:
            description: |
              Repositories not found for specified service.
      put:
        securedBy: [ token ]
        is: [ withUserAgent ]
        description: |
          Update list of user's repositories for specified service.
        responses:
          200:
            description: |
              Successfully updated list of user's repositories
              for specified service.
            body:
              application/json:
                schema: TBD
                example: !include examples/api/v1/repositories/service/put_ok.json
          409:
            description: |
              Can not retrieve list of user's repositories due to errors,
              e.g.: revoked access to service.
            body:
              application/json:
                schema: TBD
                example: !include examples/api/v1/repositories/service/put_conflict.json
      /{user}:
        uriParameters:
          user:
            description: User name on specified service.
            type: string
            example: Gr1N
        /{repo}:
          uriParameters:
            repo:
              description: Repository name on specified service.
              type: string
              example: 1pwd
          get:
            securedBy: [ null, token ]
            is: [ withUserAgent ]
            description: |
              Retrieve repository dependencies. (!) Only owner of a private
              repository can get information about it.
            responses:
              200:
                description: |
                  Successfully retrieved repository dependencies.
                body:
                  application/json:
                    schema: TBD
                    example: !include examples/api/v1/repositories/service/user/repo/get_ok.json
              404:
                description: |
                  Repository not found.
          post:
            securedBy: [ token ]
            is: [ withUserAgent ]
            description: |
              Activate monitoring for specified repository.
            responses:
              201:
                description: |
                  Monitoring successfully activated.
                headers:
                  Location:
                    description: |
                      Location of the public repository page.
                    type: string
                    example: https://pacman.io/github/Gr1N/1pwd/
              404:
                description: |
                  Repository not found.
          put:
            securedBy: [ token ]
            is: [ withUserAgent ]
            description: |
              Update repository dependencies.
            responses:
              200:
                description: |
                  Successfully updated repository dependencies.
                body:
                  application/json:
                    schema: TBD
                    example: !include examples/api/v1/repositories/service/user/repo/put_ok.json
              404:
                description: |
                  Repository not found.
          delete:
            securedBy: [ token ]
            is: [ withUserAgent ]
            description: |
              Deactivate monitoring for specified repository.
            responses:
              204:
                description: |
                  Monitoring successfully deactivated.
              404:
                description: |
                  Repository not found.

  /notifications:
    get:
      description: |
        Retrieve list of active notifications.
      securedBy: [ token ]
      is: [ withUserAgent ]
      responses:
        200:
          description: |
            Successfully retrieved list of active notifications.
          body:
            application/json:
              schema: TBD
              example: TBD
    /email:
      get:
        description: |
          Retrieve status of email notifications.
        securedBy: [ token ]
        is: [ withUserAgent ]
        responses:
          200:
            description: |
              Successfully retrieved status of email notifications.
            body:
              application/json:
                schema: TBD
                example: TBD
      post:
        description: |
          Enable notifications using email.
        securedBy: [ token ]
        is: [ withUserAgent ]
        responses:
          201:
            description: |
              Notifications using email successfully enabled.
      delete:
        description: |
          Disable notifications using email.
        securedBy: [ token ]
        is: [ withUserAgent ]
        responses:
          204:
            description: |
              Notifications using email successfully disabled.
    /pullrequest:
      get:
        description: |
          Retrieve status of pullrequests notifications.
        securedBy: [ token ]
        is: [ withUserAgent ]
        responses:
          200:
            description: |
              Successfully retrieved status of pullrequests notifications.
            body:
              application/json:
                schema: TBD
                example: TBD
      post:
        description: |
          Enable notifications using pullrequests.
        securedBy: [ token ]
        is: [ withUserAgent ]
        responses:
          201:
            description: |
              Notifications using pullrequests successfully enabled.
      delete:
        description: |
          Disable notifications using pullrequests.
        securedBy: [ token ]
        is: [ withUserAgent ]
        responses:
          204:
            description: |
              Notifications using pullrequests successfully disabled.
